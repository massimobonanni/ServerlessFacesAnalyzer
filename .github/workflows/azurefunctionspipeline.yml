name: CI/CD on Azure Function

on:
  workflow_dispatch:
  push:
    branches: 
      - "main"
    paths-ignore:
      - "ServerlessFacesAnalyzer.IaC/**"
      - ".github/**"
      - "Documentation/**"
  pull_request:
    branches: 
      - "main"
    paths-ignore:
      - "ServerlessFacesAnalyzer.IaC/**"
      - ".github/**"
      - "Documentation/**"

env: 
  FUNCTION_APP_NAME: "sfawtzhervz6fj6k-func"
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '${{ github.workspace }}/ServerlessFacesAnalyzer.Functions'
  BUILD_OUTPUT_PATH: '${{ github.workspace }}/build-artifacts'
  BUILD_PACKAGE_NAME: 'az-func.zip'
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    - name: Test
      run: dotnet test --no-build --verbosity normal
    
    - name: Publish
      run: |
        publishfolder="${{ github.workspace }}/output"
        mkdir $publishfolder
        cd $publishfolder
        dotnet publish ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }} --configuration Release --output .
        mkdir ${{ env.BUILD_OUTPUT_PATH }}
        zip -r ${{ env.BUILD_OUTPUT_PATH }}/${{ env.BUILD_PACKAGE_NAME }} .
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: build_artifacts
        path: ${{ env.BUILD_OUTPUT_PATH }}
        if-no-files-found: error
        
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.1.7
      with:
        name: build_artifacts
        path: ${{ env.BUILD_OUTPUT_PATH }}
    
    - name: Display structure of downloaded files
      run: ls -R
    
    - name: Azure Functions Action
      uses: Azure/functions-action@v1.4.7
      with:
        app-name: ${{ env.FUNCTION_APP_NAME }}
        package: ${{ env.BUILD_OUTPUT_PATH }}/${{ env.BUILD_PACKAGE_NAME }}
        publish-profile: ${{ secrets.FUNCTION_APP_PUBLISH_PROFILE }}
